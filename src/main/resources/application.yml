spring:
  application:
    name: NGS
  config:
    import: optional:file:.env[.properties] # .env import
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - openid
              - email
              - profile

          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - account_email
              - profile_nickname

          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - email
              - nickname

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  # database setting
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update

# cors setting
cors:
  allowed-origins: https://localhost:3000, http://localhost:3000, http://localhost:5173
  allowed-methods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
    - HEAD
  allowed-headers: '*'
  allow-credentials: true
  max-age: 3600

# SpringBoot port
server:
  port: 8080
  forward-headers-strategy: native

#jwt
jwt:
  secret : ${JWT_SECRET}
  cookie:
    # 현재 개발환경(http)이라서 Lax에 false이지만 나중에 운영환경(https)들어가면 None에 true로 바꿔주면 됩니다.
    same-site: None   # None | Lax | Strict
    secure: true    # true requires HTTPS for browsers to send the cookie
    max-age-seconds: 21600  # 6 hours
  
portone:
  api-secret: ${API_SECRET}

firebase:
  bucket: ${FIREBASE_BUKET}

config:
    path: ${FIREBASE_PATH}

# logging configuration
logging:
  level:
    com.imfine.ngs: DEBUG
    org.springframework.security: DEBUG

# app-level oauth2 settings
app:
  oauth2:
    # Final redirect to frontend after oauth success/failure
    # Can be overridden via ENV var OAUTH2_REDIRECT_URL
    redirect-url: ${OAUTH2_REDIRECT_URL:http://localhost:3000/auth/callback}
